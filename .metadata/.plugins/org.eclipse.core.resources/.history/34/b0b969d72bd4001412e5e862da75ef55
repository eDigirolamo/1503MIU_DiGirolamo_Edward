// this sets the background color of the master UIView (when there are no windows/tab groups on it)
Titanium.UI.setBackgroundColor("#fff");
var userData = require("JSON");
var mustaches = userData.userData.mustaches;


// variables
var pWidth = Ti.Platform.displayCaps.platformWidth;
var pHeight = Ti.Platform.displayCaps.platformHeight;
var margin = 15;
var userNumber;
var deviceCount = mustaches.length;
var rowCount = 3;

var availableWidth = pWidth - (margin * 4);
var size = (availableWidth / rowCount);


// windows
var mainWin = Ti.UI.createWindow({
	title: "Upper Lipholstry",
	backgroundColor: "#E0E0E0"
});
var logInWin = Ti.UI.createWindow({
	backgroundColor: "#757575",
	title: "Login"
	
});
var signUpWin = Ti.UI.createWindow({
	backgroundColor: "#757575",
	title: "Sign up"
});

var memberWin = Ti.UI.createWindow({
	backgroundColor: "#fff",
	title: "Members"
});

var levelWin = Ti.UI.createWindow({
	backgroundColor: "#fff",
	title: "Levels"
});

var typeWin = Ti.UI.createWindow({
	backgroundColor: "#757575",
	title: "Ye Ole Mustache"
});

var profileWin = Ti.UI.createWindow({
	backgroundColor: "#fff",
	title: "Name"
});

var galleryContainer = Ti.UI.createScrollView({
	backgroundColor: "#E0E0E0",
	layout: "horizontal",

	width: pWidth,
	contentWidth: pWidth,
});


var navWin = Ti.UI.iOS.createNavigationWindow({
	window: mainWin
});

//imageviews

var logo = Ti.UI.createImageView({
	title: "logo",
	image:"images/" + "logo.jpg",
	top: margin,
	height: 295
});

var goat = Ti.UI.createImageView({
	title: "goat",
	image:"images/" + "goat.png",
	top: margin,
	height: 235
});

var someday = Ti.UI.createImageView({
	title: "someday",
	image:"images/" + "someday.jpeg",
	top: margin,
	height: 235
});

var welcome = Ti.UI.createImageView({
	title: "welcome",
	image:"images/" + "welcome.png",
	top: margin,
	height: 235,
});

var novice = Ti.UI.createImageView({
	image:"images/" + "novice.jpg",
	top: margin,
	height: 95,
});

var noviceLabel = Ti.UI.createLabel({
	backgroundColor:"#0277BD",
	color: "#fff",
	text: "Novice",
	top: novice.top + novice.height + margin,
	textAlign: "center",
	height: 35,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 

});


var intermediate = Ti.UI.createImageView({
	image:"images/" + "intermediate.jpg",
	top: noviceLabel.top + noviceLabel.height + margin,
	height: 95,
});

var intermediateLabel = Ti.UI.createLabel({
	backgroundColor:"#0277BD",
	text: "Intermediate",
	color: "#fff",
	top: intermediate.top + intermediate.height + margin,
	textAlign: "center",
	height: 35,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 

});


 


var pro = Ti.UI.createImageView({
	image:"images/" + "prof.jpg",
	top: intermediateLabel.top + intermediateLabel.height + margin,
	height: 95,
});


var proLabel = Ti.UI.createLabel({
	backgroundColor:"#0277BD",
	color: "#fff",
	text: "Professional",
	top: pro.top + pro.height + margin,
	textAlign: "center",
	height: 35,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 

});


var myImage = Ti.UI.createImageView({
	image:"images/" + "novice.jpg",
	top: 3* margin,
	height: 275,
});

// Labels

var logInLabel = Ti.UI.createLabel({
	backgroundColor: "#fff",
	top: margin/2,
	left: margin * 2,
	right: margin * 2,
	height: 235,
	borderRadius: 7,

});

var logInFormLabel = Ti.UI.createLabel({
	backgroundColor: "#fff",
	top: logInLabel.top + logInLabel.height + margin,
	left: margin /3,
	right: margin/3,
	height: 225,
	borderRadius: 5,

});

var signUpLabel = Ti.UI.createLabel({
	backgroundColor: "#fff",
	top: margin/2,
	left: margin * 2,
	right: margin * 2,
	height: 215,
	borderRadius: 7,

});

var signUpFormLabel = Ti.UI.createLabel({
	backgroundColor: "#fff",
	color: "#000",
	top: signUpLabel.top + signUpLabel.height + margin +5,
	left: margin /3,
	right: margin/3,
	height: 250,
	borderRadius: 5
	
});

var logoLabel = Ti.UI.createLabel({
	backgroundColor:"#fff",
	title: "logo",
	top: 25,
	height: 295,
	borderRadius: 7 
});

var levelLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	title: "levels",
	color:"#fff",
	text: "Levels",
	textAlign: "center",
	top: welcome.top + welcome.height + 2* margin,
	height: 55,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 
});



var kindLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	title: "types",
	color:"#fff",
	text: "Types",
	textAlign: "center",
	top: levelLabel.top + levelLabel.height + margin,
	height: 55,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 
});

var profileLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	title: "profile",
	color: "white",
	text: "My Profile",
	top: kindLabel.top + kindLabel.height + margin,
	textAlign: "center",
	height: 55,
	right: margin *3,
	left: margin *3,
	borderRadius: 7 

});





var userLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	color:"#fff",
	text: "Name",
	top: myImage.top + myImage.height + margin,
	textAlign: "center",
	height: 35,
	right: margin,
	left: margin,
	borderRadius: 7 

});

var levLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	color:"#fff",
	text: "'Tache' level: Novice" ,
	top: userLabel.top + userLabel.height + margin,
	textAlign: "center",
	height: 35,
	right: margin,
	left: margin,
	borderRadius: 7 

});

var emailLabel = Ti.UI.createLabel({
	backgroundColor:"#00796B",
	color:"#fff",
	text: "email" ,
	top: levLabel.top + levLabel.height + margin,
	textAlign: "center",
	height: 35,
	right: margin ,
	left: margin,
	borderRadius: 7 

});






// textfields
var userName = Ti.UI.createTextField({
	backgroundColor: 'white',
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
    hintText : "Username",
    top :logInFormLabel.top + margin +10,
    left: margin *2,
    width : 175,
    height : 35,
    clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS

});

var userFirstName = Ti.UI.createTextField({
	backgroundColor: 'white',
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
    hintText : "First Name",
    top: signUpFormLabel.top + 20,
    left : margin*2,
	right: margin * 2,
    width : 175,
    height : 35,
    clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS

});

var userLastName = Ti.UI.createTextField({
	backgroundColor: 'white',
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
    hintText : "Last Name", 
    top : userFirstName.top + userFirstName.height + margin/2,
    left: margin *2,
	right: margin*2,   
	height : 35,
	clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS

});


var newUserPass = Ti.UI.createTextField({
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
	passwordMask: true,
 	hintText : "Password",
 	top: userLastName.top + userLastName.height+ margin ,
   	left : margin*2,
	right: margin * 2,
    height : 35,
    clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS


 	

	
});

var userPass = Ti.UI.createTextField({
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
	passwordMask: true,
 	hintText : "Password",
 	top: userName.top + userName.height+ margin,
    left: margin* 2,
    right: margin *2,
    height : 35,
    clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS


 	

	
});

var userEmail = Ti.UI.createTextField({
	borderStyle : Titanium.UI.INPUT_BORDERSTYLE_ROUNDED,
	hintText : "Email",
 	top: newUserPass.top + newUserPass.height+ margin/2,
 	left : margin*2,
	right: margin * 2,
    height : 35,
    clearButtonMode: Titanium.UI.INPUT_BUTTONMODE_ONFOCUS


	
});

// buttons


var logIn = Ti.UI.createButton({
	backgroundColor: "#00796B",
	title: "Login",
	color: "#fff",
	borderRadius: 5,
	height: 35,
	left : margin*2,
	right: margin * 2,
	top: userPass.top+ userPass.height+ margin + 10 
});

var googleButton = Ti.UI.createButton({
	backgroundColor: "red",
	title: "Login with Google",
	color: "#fff",
	borderRadius: 5,
	height: 35,
	left : margin * 2,
	right: margin* 2,
	top: logIn.top+ logIn.height + 10 
	
	
});




var signUp = Ti.UI.createButton({
	backgroundColor: "#0277BD",
	title: "Sign up",
	color: "#fff",
	borderRadius: 5,
	height: 35,
	width: 100,
	top:userEmail.top + userEmail.height +  margin
	
});

// intital buttons
var logButton = Ti.UI.createButton({
	backgroundColor:"#00796B",
	color: "#fff",
	title: "Login",
	top:355,
	left: margin * 3,
	right: margin *3,
	height:35,
	borderRadius: 5
	});

var signButton = Ti.UI.createButton({
	backgroundColor:"#0277BD",
	color: "#fff",
	title: "Join",
	top: logButton.top + logButton.height+ margin,
	height: 35,
	left: margin * 3,
	right: margin *3,
	borderRadius: 5
	
});


// Misc Inerterface elements



// functions


var logInFunction = function(){
	
for(n in userData.userData.users){
	 
	var sucess;
	if(userName.value == userData.userData.users[n].userName && userPass.value == userData.userData.users[n].password ){
		
		
		var successDialog = Ti.UI.createAlertDialog({
	    message: "\n Welome Bro-stache, to the few the proud.....the Mustache. Here you will learn the ways of the brotherhood. The battle is long but in the end its only with yourself. Happy growing ",
	    ok: 'Enter',
	    title: 'Congratulations'
  		});
  		 success = true;
  		 n = parseInt(n);
  		userNumber = n;

  		
	}else{
			var failDialog = Ti.UI.createAlertDialog({
	    message: "Failed attempt",
	    ok: 'try again',
	    title: 'Oops'
  		});
  		
  		success = false;
		
	}
}
if(success == true){
  		
  successDialog.show();
  navWin.openWindow(memberWin);
  
	}else {
  failDialog.show();
	}

	
};

var signUpFunction = function(){
	
var newUser = {
	email:userEmail.value,
	firstName: userFirstName.value,
	lastName: userLastName.value,
	password: newUserPass.value,
	userName:"Name" };
	
	
	if(newUser.email != "" && newUser.firstName != "" && newUser.lastName != "" && newUser.password != ""){
	var successDialog = Ti.UI.createAlertDialog({
	    message: newUser.firstName+  " Please select a username",
	    style: Ti.UI.iPhone.AlertDialogStyle.PLAIN_TEXT_INPUT,
		ok: 'Submit',
	    title: 'Good to go'
  		});
		successDialog.show();  	

	successDialog.addEventListener("click", function(e){
	newUser.userName = e.text;
	userData.userData.users.push(newUser);

	
	var dialog = Ti.UI.createAlertDialog({
	    message: newUser.firstName+  " That username is available. Please try logging in as " + newUser.userName,
		ok: 'Got it',
	    title: "Congratulations"
  		});
		dialog.show(); 
	
	
	navWin.closeWindow(signUpWin);
	userFirstName.value = null;
	userLastName.value = null;
	userPass.value = null;
	userEmail.value = null;

	});
	
	// close the if "" blank text field check
	};
};






logoLabel.add(logo);
mainWin.add(logoLabel,logButton, signButton);


mainWin.addEventListener("click", function(event){

console.log(userNumber);
	if(event.source.title == "Login"){
		navWin.openWindow(logInWin);
	}else if(event.source.title == "Join"){
		navWin.openWindow(signUpWin);
		
	}else if(event.source.title == "logo"){	
	
	var logoDialog = Ti.UI.createAlertDialog({
	    message: "Hands off the crumb catcher, Grow your own!",
	    ok: 'My Apologies',
	    title: 'Excuse me!'
  		});
  logoDialog.show();
	


	}else{
		var dialog = Ti.UI.createAlertDialog({
	    message: 'Please select a button',
	    ok: 'Okay',
	    title: 'Log in'
  		});
  dialog.show();
	}
});

logInLabel.add(goat);
logInWin.add(logInLabel, logInFormLabel, userName, userPass, logIn, googleButton);

signUpLabel.add(someday);
signUpWin.add(signUpLabel, signUpFormLabel,userFirstName,userLastName,newUserPass, userEmail, signUp);

memberWin.add(levelLabel, kindLabel,profileLabel, welcome);


levelWin.add(novice, noviceLabel, intermediate, intermediateLabel, pro, proLabel);

// listners
logIn.addEventListener("click", logInFunction);

signUp.addEventListener("click", signUpFunction);

memberWin.addEventListener("click", function(e){
	
	if(e.source.title == "levels"){
		navWin.openWindow(levelWin);
		
	}else if(e.source.title == "types"){
		typeWin.add(galleryContainer);
		navWin.openWindow(typeWin);
		for(n in mustaches){

typeWin.addEventListener("close", function(event){
			galleryContainer.removeAllChildren();

});

			var view = Ti.UI.createImageView({
				backgroundColor: "#fff",
				image: "images/mustaches/" + mustaches[n].imageName,
				
				// data to gather for passing into my function late				
				
				top: margin,
				left: margin,
				width: size,
				height: size,
				borderRadius: 3	,
			});
			
			
			galleryContainer.add(view);
};

// profile window
	}else if(e.source.title == "profile"){
		userFirstName = userData.userData.users[userNumber].firstName;
		userLastName = userData.userData.users[userNumber].lastName;
		emailLabel.text =  userData.userData.users[userNumber].email;
		userLabel.text = userFirstName + " " + userLastName;
		
		profileWin.add(myImage, userLabel,levLabel,emailLabel);
		
		navWin.openWindow(profileWin);
		profileWin.title = userName.value;

	}else{
		var wowDialog = Ti.UI.createAlertDialog({
	    message: 'Please select buttons only',
	    ok: 'Okay',
	    title: 'Buttons'
  		});
  wowDialog.show();
	}
});

memberWin.addEventListener("close", function(){
	
	var exitDialog = Ti.UI.createAlertDialog({
	    message: "ARE YOU SURE",
	    cancel: 1,
  		buttonNames: ['Stay', 'Exit'],
	    title: 'Leaving so soon?'
  		});
  exitDialog.show();
  
  exitDialog.addEventListener("click", function(e){
  if(e.index === e.source.cancel){
  	navWin.closeWindow(logInWin);
  	userName.value = null;
  	userPass.value = null};
  });

 
  
});
// main code begin
navWin.open();
